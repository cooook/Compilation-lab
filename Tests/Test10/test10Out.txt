		



		START AST


\--> program
  \--> declaration-list
    |--> declaration-list
    | |--> declaration-list
    | | |--> declaration-list
    | | | |--> fun-declaration
    | | | | |--> int
    | | | | |--> div
    | | | | |--> param
    | | | | | |--> int
    | | | | | \--> x
    | | | | \--> compound-stmt0
    | | | |   |--> {
    | | | |   |--> var-declaration
    | | | |   | |--> int
    | | | |   | \--> factor
    | | | |   |--> statement-list
    | | | |   | |--> expression
    | | | |   | | |--> factor
    | | | |   | | |--> =
    | | | |   | | \--> 10
    | | | |   | \--> return-stmt
    | | | |   |   |--> return
    | | | |   |   \--> term
    | | | |   |     |--> x
    | | | |   |     |--> /
    | | | |   |     \--> factor
    | | | |   \--> }
    | | | \--> fun-declaration
    | | |   |--> int
    | | |   |--> rem
    | | |   |--> param-list
    | | |   | |--> param
    | | |   | | |--> int
    | | |   | | \--> x
    | | |   | \--> param
    | | |   |   |--> int
    | | |   |   \--> y
    | | |   \--> compound-stmt1
    | | |     |--> {
    | | |     |--> var-declaration
    | | |     | |--> int
    | | |     | \--> factor
    | | |     |--> statement-list
    | | |     | |--> expression
    | | |     | | |--> factor
    | | |     | | |--> =
    | | |     | | \--> 10
    | | |     | \--> return-stmt
    | | |     |   |--> return
    | | |     |   \--> additive-expression
    | | |     |     |--> y
    | | |     |     |--> -
    | | |     |     \--> term
    | | |     |       |--> factor
    | | |     |       |--> *
    | | |     |       \--> x
    | | |     \--> }
    | | \--> fun-declaration
    | |   |--> void
    | |   |--> digitize
    | |   |--> param
    | |   | |--> int
    | |   | \--> x
    | |   \--> compound-stmt3
    | |     |--> {
    | |     |--> local-declarations
    | |     | |--> var-declaration
    | |     | | |--> int
    | |     | | \--> dx
    | |     | \--> var-declaration
    | |     |   |--> int
    | |     |   \--> rx
    | |     |--> iteration-stmt
    | |     | |--> while
    | |     | |--> simple-expression
    | |     | | |--> x
    | |     | | |--> >
    | |     | | \--> 0
    | |     | \--> compound-stmt2
    | |     |   |--> {
    | |     |   |--> statement-list
    | |     |   | |--> statement-list
    | |     |   | | |--> statement-list
    | |     |   | | | |--> expression
    | |     |   | | | | |--> dx
    | |     |   | | | | |--> =
    | |     |   | | | | \--> call
    | |     |   | | | |   |--> div
    | |     |   | | | |   \--> x
    | |     |   | | | \--> expression
    | |     |   | | |   |--> rx
    | |     |   | | |   |--> =
    | |     |   | | |   \--> call
    | |     |   | | |     |--> rem
    | |     |   | | |     \--> arg-list
    | |     |   | | |       |--> dx
    | |     |   | | |       \--> x
    | |     |   | | \--> call
    | |     |   | |   |--> output
    | |     |   | |   \--> rx
    | |     |   | \--> expression
    | |     |   |   |--> x
    | |     |   |   |--> =
    | |     |   |   \--> dx
    | |     |   \--> }
    | |     \--> }
    | \--> fun-declaration
    |   |--> int
    |   |--> Fibonacci
    |   |--> param
    |   | |--> int
    |   | \--> x1
    |   \--> compound-stmt5
    |     |--> {
    |     |--> var-declaration
    |     | |--> int
    |     | \--> val
    |     |--> statement-list
    |     | |--> statement-list
    |     | | |--> statement-list
    |     | | | |--> statement-list
    |     | | | | |--> selection-stmt
    |     | | | | | |--> if
    |     | | | | | |--> simple-expression
    |     | | | | | | |--> x1
    |     | | | | | | |--> ==
    |     | | | | | | \--> 1
    |     | | | | | \--> expression
    |     | | | | |   |--> val
    |     | | | | |   |--> =
    |     | | | | |   \--> 1
    |     | | | | \--> selection-stmt
    |     | | | |   |--> if
    |     | | | |   |--> simple-expression
    |     | | | |   | |--> x1
    |     | | | |   | |--> ==
    |     | | | |   | \--> 2
    |     | | | |   \--> expression
    |     | | | |     |--> val
    |     | | | |     |--> =
    |     | | | |     \--> 1
    |     | | | \--> selection-stmt
    |     | | |   |--> if
    |     | | |   |--> simple-expression
    |     | | |   | |--> x1
    |     | | |   | |--> >
    |     | | |   | \--> 2
    |     | | |   \--> compound-stmt4
    |     | | |     |--> {
    |     | | |     |--> expression
    |     | | |     | |--> val
    |     | | |     | |--> =
    |     | | |     | \--> additive-expression
    |     | | |     |   |--> call
    |     | | |     |   | |--> Fibonacci
    |     | | |     |   | \--> additive-expression
    |     | | |     |   |   |--> x1
    |     | | |     |   |   |--> -
    |     | | |     |   |   \--> 2
    |     | | |     |   |--> +
    |     | | |     |   \--> call
    |     | | |     |     |--> Fibonacci
    |     | | |     |     \--> additive-expression
    |     | | |     |       |--> x1
    |     | | |     |       |--> -
    |     | | |     |       \--> 1
    |     | | |     \--> }
    |     | | \--> call
    |     | |   |--> digitize
    |     | |   \--> val
    |     | \--> return-stmt
    |     |   |--> return
    |     |   \--> val
    |     \--> }
    \--> fun-declaration
      |--> void
      |--> main
      |--> void
      \--> compound-stmt6
        |--> {
        |--> local-declarations
        | |--> var-declaration
        | | |--> int
        | | \--> x
        | \--> var-declaration
        |   |--> int
        |   \--> result
        |--> statement-list
        | |--> statement-list
        | | |--> expression
        | | | |--> x
        | | | |--> =
        | | | \--> call
        | | |   \--> input
        | | \--> expression
        | |   |--> result
        | |   |--> =
        | |   \--> call
        | |     |--> Fibonacci
        | |     \--> x
        | \--> call
        |   |--> output
        |   \--> result
        \--> }


		END AST


		START OF SYMBOL TABLES



Symbol Table GLOBAL with Scope Level 0:
Name: input, Declared on line 0 with return type void and takes 0 parameter(s).
Name: output, Declared on line 0 with return type int and takes 1 parameter(s).
Name: div, Declared on line 1 with return type int and takes 1 parameter(s).
Name: rem, Declared on line 9 with return type int and takes 2 parameter(s).
Name: digitize, Declared on line 17 with return type void and takes 1 parameter(s).
Name: Fibonacci, Declared on line 32 with return type int and takes 1 parameter(s).
Name: main, Declared on line 45 with return type void and takes 0 parameter(s).
===============================================================================
===============================================================================


Symbol Table GLOBAL->div with Scope Level 1:
Name: input, Declared on line 0 with return type void and takes 0 parameter(s).
Name: output, Declared on line 0 with return type int and takes 1 parameter(s).
Name: div, Declared on line 1 with return type int and takes 1 parameter(s).
Name: rem, Declared on line 9 with return type int and takes 2 parameter(s).
Name: digitize, Declared on line 17 with return type void and takes 1 parameter(s).
Name: Fibonacci, Declared on line 32 with return type int and takes 1 parameter(s).
Name: main, Declared on line 45 with return type void and takes 0 parameter(s).
-------------------------------------------------------------------------------
Scope boundary. This is the end of scope level 1 (top of the local table).
Name: x, Declared on line 1 and is not an Array.
Name: factor, Declared on line 3 and is not an Array.
===============================================================================
===============================================================================


Symbol Table GLOBAL->rem with Scope Level 1:
Name: input, Declared on line 0 with return type void and takes 0 parameter(s).
Name: output, Declared on line 0 with return type int and takes 1 parameter(s).
Name: div, Declared on line 1 with return type int and takes 1 parameter(s).
Name: rem, Declared on line 9 with return type int and takes 2 parameter(s).
Name: digitize, Declared on line 17 with return type void and takes 1 parameter(s).
Name: Fibonacci, Declared on line 32 with return type int and takes 1 parameter(s).
Name: main, Declared on line 45 with return type void and takes 0 parameter(s).
-------------------------------------------------------------------------------
Scope boundary. This is the end of scope level 1 (top of the local table).
Name: x, Declared on line 9 and is not an Array.
Name: y, Declared on line 9 and is not an Array.
Name: factor, Declared on line 11 and is not an Array.
===============================================================================
===============================================================================


Symbol Table GLOBAL->digitize with Scope Level 1:
Name: input, Declared on line 0 with return type void and takes 0 parameter(s).
Name: output, Declared on line 0 with return type int and takes 1 parameter(s).
Name: div, Declared on line 1 with return type int and takes 1 parameter(s).
Name: rem, Declared on line 9 with return type int and takes 2 parameter(s).
Name: digitize, Declared on line 17 with return type void and takes 1 parameter(s).
Name: Fibonacci, Declared on line 32 with return type int and takes 1 parameter(s).
Name: main, Declared on line 45 with return type void and takes 0 parameter(s).
-------------------------------------------------------------------------------
Scope boundary. This is the end of scope level 1 (top of the local table).
Name: x, Declared on line 17 and is not an Array.
Name: dx, Declared on line 19 and is not an Array.
Name: rx, Declared on line 20 and is not an Array.
===============================================================================
===============================================================================


Symbol Table GLOBAL->digitize->compound-stmt2 with Scope Level 2:
Name: input, Declared on line 0 with return type void and takes 0 parameter(s).
Name: output, Declared on line 0 with return type int and takes 1 parameter(s).
Name: div, Declared on line 1 with return type int and takes 1 parameter(s).
Name: rem, Declared on line 9 with return type int and takes 2 parameter(s).
Name: digitize, Declared on line 17 with return type void and takes 1 parameter(s).
Name: Fibonacci, Declared on line 32 with return type int and takes 1 parameter(s).
Name: main, Declared on line 45 with return type void and takes 0 parameter(s).
-------------------------------------------------------------------------------
Scope boundary. This is the end of scope level 1 (top of the local table).
Name: x, Declared on line 17 and is not an Array.
Name: dx, Declared on line 19 and is not an Array.
Name: rx, Declared on line 20 and is not an Array.
-------------------------------------------------------------------------------
Scope boundary. This is the end of scope level 2 (top of the local table).
===============================================================================
===============================================================================


Symbol Table GLOBAL->Fibonacci with Scope Level 1:
Name: input, Declared on line 0 with return type void and takes 0 parameter(s).
Name: output, Declared on line 0 with return type int and takes 1 parameter(s).
Name: div, Declared on line 1 with return type int and takes 1 parameter(s).
Name: rem, Declared on line 9 with return type int and takes 2 parameter(s).
Name: digitize, Declared on line 17 with return type void and takes 1 parameter(s).
Name: Fibonacci, Declared on line 32 with return type int and takes 1 parameter(s).
Name: main, Declared on line 45 with return type void and takes 0 parameter(s).
-------------------------------------------------------------------------------
Scope boundary. This is the end of scope level 1 (top of the local table).
Name: x1, Declared on line 32 and is not an Array.
Name: val, Declared on line 34 and is not an Array.
===============================================================================
===============================================================================


Symbol Table GLOBAL->Fibonacci->compound-stmt4 with Scope Level 2:
Name: input, Declared on line 0 with return type void and takes 0 parameter(s).
Name: output, Declared on line 0 with return type int and takes 1 parameter(s).
Name: div, Declared on line 1 with return type int and takes 1 parameter(s).
Name: rem, Declared on line 9 with return type int and takes 2 parameter(s).
Name: digitize, Declared on line 17 with return type void and takes 1 parameter(s).
Name: Fibonacci, Declared on line 32 with return type int and takes 1 parameter(s).
Name: main, Declared on line 45 with return type void and takes 0 parameter(s).
-------------------------------------------------------------------------------
Scope boundary. This is the end of scope level 1 (top of the local table).
Name: x1, Declared on line 32 and is not an Array.
Name: val, Declared on line 34 and is not an Array.
-------------------------------------------------------------------------------
Scope boundary. This is the end of scope level 2 (top of the local table).
===============================================================================
===============================================================================


Symbol Table GLOBAL->main with Scope Level 1:
Name: input, Declared on line 0 with return type void and takes 0 parameter(s).
Name: output, Declared on line 0 with return type int and takes 1 parameter(s).
Name: div, Declared on line 1 with return type int and takes 1 parameter(s).
Name: rem, Declared on line 9 with return type int and takes 2 parameter(s).
Name: digitize, Declared on line 17 with return type void and takes 1 parameter(s).
Name: Fibonacci, Declared on line 32 with return type int and takes 1 parameter(s).
Name: main, Declared on line 45 with return type void and takes 0 parameter(s).
-------------------------------------------------------------------------------
Scope boundary. This is the end of scope level 1 (top of the local table).
Name: x, Declared on line 47 and is not an Array.
Name: result, Declared on line 48 and is not an Array.
===============================================================================
===============================================================================



		END OF SYMBOL TABLES



