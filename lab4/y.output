State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID ';'
    7                | type_specifier ID '[' NUM ']' ';'

    8 type_specifier: KEYWORD_INT
    9               | KEYWORD_VOID

   10 fun_declaration: type_specifier ID '(' params ')' compound_stmt

   11 params: param_list
   12       | KEYWORD_VOID

   13 param_list: param_list ',' param
   14           | param

   15 param: type_specifier ID
   16      | type_specifier ID '[' ']'

   17 compound_stmt: '{' local_declarations statement_list '}'

   18 local_declarations: local_declarations var_declaration
   19                   | %empty

   20 statement_list: statement_list statement
   21               | %empty

   22 statement: expression_stmt
   23          | compound_stmt
   24          | selection_stmt
   25          | iteration_stmt
   26          | return_stmt

   27 expression_stmt: expression ';'
   28                | ';'

   29 selection_stmt: KEYWORD_IF '(' expression ')' statement
   30               | KEYWORD_IF '(' expression ')' statement KEYWORD_ELSE statement

   31 iteration_stmt: KEYWORD_WHILE '(' expression ')' statement

   32 return_stmt: KEYWORD_RETURN ';'
   33            | KEYWORD_RETURN expression ';'

   34 expression: var '=' expression
   35           | simple_expression

   36 var: ID
   37    | ID '[' expression ']'

   38 simple_expression: additive_expression relop additive_expression
   39                  | additive_expression

   40 relop: LESS_EQUAL_THAN
   41      | LESS_THAN
   42      | GREAT_THAN
   43      | GREAT_EQUAL_THAN
   44      | DOUBLE_EQUAL
   45      | NOT_EQUAL

   46 additive_expression: additive_expression '+' term
   47                    | additive_expression '-' term
   48                    | term

   49 term: term '*' factor
   50     | term '/' factor
   51     | factor

   52 factor: '(' expression ')'
   53       | var
   54       | call
   55       | NUM

   56 call: ID '(' args ')'

   57 args: arg_list
   58     | %empty

   59 arg_list: arg_list ',' expression
   60         | expression


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 29 30 31 52 56
    ')' (41) 10 29 30 31 52 56
    '*' (42) 49
    '+' (43) 46
    ',' (44) 13 59
    '-' (45) 47
    '/' (47) 50
    ';' (59) 6 7 27 28 32 33
    '=' (61) 34
    '[' (91) 7 16 37
    ']' (93) 7 16 37
    '{' (123) 17
    '}' (125) 17
    error (256)
    ID <varname> (258) 6 7 10 15 16 36 37 56
    NUM <varname> (259) 7 55
    LESS_EQUAL_THAN (260) 40
    LESS_THAN (261) 41
    GREAT_THAN (262) 42
    GREAT_EQUAL_THAN (263) 43
    DOUBLE_EQUAL (264) 44
    NOT_EQUAL (265) 45
    KEYWORD_ELSE (266) 30
    KEYWORD_IF (267) 29 30
    KEYWORD_INT (268) 8
    KEYWORD_RETURN (269) 32 33
    KEYWORD_VOID (270) 9 12
    KEYWORD_WHILE (271) 31


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program <node> (31)
        on left: 1
        on right: 0
    declaration_list <node> (32)
        on left: 2 3
        on right: 1 2
    declaration <node> (33)
        on left: 4 5
        on right: 2 3
    var_declaration <node> (34)
        on left: 6 7
        on right: 4 18
    type_specifier <node> (35)
        on left: 8 9
        on right: 6 7 10 15 16
    fun_declaration <node> (36)
        on left: 10
        on right: 5
    params (37)
        on left: 11 12
        on right: 10
    param_list (38)
        on left: 13 14
        on right: 11 13
    param (39)
        on left: 15 16
        on right: 13 14
    compound_stmt (40)
        on left: 17
        on right: 10 23
    local_declarations (41)
        on left: 18 19
        on right: 17 18
    statement_list (42)
        on left: 20 21
        on right: 17 20
    statement (43)
        on left: 22 23 24 25 26
        on right: 20 29 30 31
    expression_stmt (44)
        on left: 27 28
        on right: 22
    selection_stmt (45)
        on left: 29 30
        on right: 24
    iteration_stmt (46)
        on left: 31
        on right: 25
    return_stmt (47)
        on left: 32 33
        on right: 26
    expression <node> (48)
        on left: 34 35
        on right: 27 29 30 31 33 34 37 52 59 60
    var <node> (49)
        on left: 36 37
        on right: 34 53
    simple_expression <node> (50)
        on left: 38 39
        on right: 35
    relop (51)
        on left: 40 41 42 43 44 45
        on right: 38
    additive_expression <node> (52)
        on left: 46 47 48
        on right: 38 39 46 47
    term <node> (53)
        on left: 49 50 51
        on right: 46 47 48 49 50
    factor <node> (54)
        on left: 52 53 54 55
        on right: 49 50 51
    call (55)
        on left: 56
        on right: 54
    args (56)
        on left: 57 58
        on right: 56
    arg_list (57)
        on left: 59 60
        on right: 57 59


State 0

    0 $accept: . program $end

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: KEYWORD_INT .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: KEYWORD_VOID .

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'
   10 fun_declaration: type_specifier . ID '(' params ')' compound_stmt

    ID  shift, and go to state 11


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'
   10 fun_declaration: type_specifier ID . '(' params ')' compound_stmt

    ';'  shift, and go to state 12
    '['  shift, and go to state 13
    '('  shift, and go to state 14


State 12

    6 var_declaration: type_specifier ID ';' .

    $default  reduce using rule 6 (var_declaration)


State 13

    7 var_declaration: type_specifier ID '[' . NUM ']' ';'

    NUM  shift, and go to state 15


State 14

   10 fun_declaration: type_specifier ID '(' . params ')' compound_stmt

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 16

    type_specifier  go to state 17
    params          go to state 18
    param_list      go to state 19
    param           go to state 20


State 15

    7 var_declaration: type_specifier ID '[' NUM . ']' ';'

    ']'  shift, and go to state 21


State 16

    9 type_specifier: KEYWORD_VOID .
   12 params: KEYWORD_VOID .

    ')'       reduce using rule 12 (params)
    $default  reduce using rule 9 (type_specifier)


State 17

   15 param: type_specifier . ID
   16      | type_specifier . ID '[' ']'

    ID  shift, and go to state 22


State 18

   10 fun_declaration: type_specifier ID '(' params . ')' compound_stmt

    ')'  shift, and go to state 23


State 19

   11 params: param_list .
   13 param_list: param_list . ',' param

    ','  shift, and go to state 24

    $default  reduce using rule 11 (params)


State 20

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 21

    7 var_declaration: type_specifier ID '[' NUM ']' . ';'

    ';'  shift, and go to state 25


State 22

   15 param: type_specifier ID .
   16      | type_specifier ID . '[' ']'

    '['  shift, and go to state 26

    $default  reduce using rule 15 (param)


State 23

   10 fun_declaration: type_specifier ID '(' params ')' . compound_stmt

    '{'  shift, and go to state 27

    compound_stmt  go to state 28


State 24

   13 param_list: param_list ',' . param

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 2

    type_specifier  go to state 17
    param           go to state 29


State 25

    7 var_declaration: type_specifier ID '[' NUM ']' ';' .

    $default  reduce using rule 7 (var_declaration)


State 26

   16 param: type_specifier ID '[' . ']'

    ']'  shift, and go to state 30


State 27

   17 compound_stmt: '{' . local_declarations statement_list '}'

    $default  reduce using rule 19 (local_declarations)

    local_declarations  go to state 31


State 28

   10 fun_declaration: type_specifier ID '(' params ')' compound_stmt .

    $default  reduce using rule 10 (fun_declaration)


State 29

   13 param_list: param_list ',' param .

    $default  reduce using rule 13 (param_list)


State 30

   16 param: type_specifier ID '[' ']' .

    $default  reduce using rule 16 (param)


State 31

   17 compound_stmt: '{' local_declarations . statement_list '}'
   18 local_declarations: local_declarations . var_declaration

    KEYWORD_INT   shift, and go to state 1
    KEYWORD_VOID  shift, and go to state 2

    $default  reduce using rule 21 (statement_list)

    var_declaration  go to state 32
    type_specifier   go to state 33
    statement_list   go to state 34


State 32

   18 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 18 (local_declarations)


State 33

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'

    ID  shift, and go to state 35


State 34

   17 compound_stmt: '{' local_declarations statement_list . '}'
   20 statement_list: statement_list . statement

    ID              shift, and go to state 36
    NUM             shift, and go to state 37
    KEYWORD_IF      shift, and go to state 38
    KEYWORD_RETURN  shift, and go to state 39
    KEYWORD_WHILE   shift, and go to state 40
    ';'             shift, and go to state 41
    '('             shift, and go to state 42
    '{'             shift, and go to state 27
    '}'             shift, and go to state 43

    compound_stmt        go to state 44
    statement            go to state 45
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 35

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'

    ';'  shift, and go to state 12
    '['  shift, and go to state 13


State 36

   36 var: ID .
   37    | ID . '[' expression ']'
   56 call: ID . '(' args ')'

    '['  shift, and go to state 57
    '('  shift, and go to state 58

    $default  reduce using rule 36 (var)


State 37

   55 factor: NUM .

    $default  reduce using rule 55 (factor)


State 38

   29 selection_stmt: KEYWORD_IF . '(' expression ')' statement
   30               | KEYWORD_IF . '(' expression ')' statement KEYWORD_ELSE statement

    '('  shift, and go to state 59


State 39

   32 return_stmt: KEYWORD_RETURN . ';'
   33            | KEYWORD_RETURN . expression ';'

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    ';'  shift, and go to state 60
    '('  shift, and go to state 42

    expression           go to state 61
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 40

   31 iteration_stmt: KEYWORD_WHILE . '(' expression ')' statement

    '('  shift, and go to state 62


State 41

   28 expression_stmt: ';' .

    $default  reduce using rule 28 (expression_stmt)


State 42

   52 factor: '(' . expression ')'

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 63
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 43

   17 compound_stmt: '{' local_declarations statement_list '}' .

    $default  reduce using rule 17 (compound_stmt)


State 44

   23 statement: compound_stmt .

    $default  reduce using rule 23 (statement)


State 45

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 46

   22 statement: expression_stmt .

    $default  reduce using rule 22 (statement)


State 47

   24 statement: selection_stmt .

    $default  reduce using rule 24 (statement)


State 48

   25 statement: iteration_stmt .

    $default  reduce using rule 25 (statement)


State 49

   26 statement: return_stmt .

    $default  reduce using rule 26 (statement)


State 50

   27 expression_stmt: expression . ';'

    ';'  shift, and go to state 64


State 51

   34 expression: var . '=' expression
   53 factor: var .

    '='  shift, and go to state 65

    $default  reduce using rule 53 (factor)


State 52

   35 expression: simple_expression .

    $default  reduce using rule 35 (expression)


State 53

   38 simple_expression: additive_expression . relop additive_expression
   39                  | additive_expression .
   46 additive_expression: additive_expression . '+' term
   47                    | additive_expression . '-' term

    LESS_EQUAL_THAN   shift, and go to state 66
    LESS_THAN         shift, and go to state 67
    GREAT_THAN        shift, and go to state 68
    GREAT_EQUAL_THAN  shift, and go to state 69
    DOUBLE_EQUAL      shift, and go to state 70
    NOT_EQUAL         shift, and go to state 71
    '+'               shift, and go to state 72
    '-'               shift, and go to state 73

    $default  reduce using rule 39 (simple_expression)

    relop  go to state 74


State 54

   48 additive_expression: term .
   49 term: term . '*' factor
   50     | term . '/' factor

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76

    $default  reduce using rule 48 (additive_expression)


State 55

   51 term: factor .

    $default  reduce using rule 51 (term)


State 56

   54 factor: call .

    $default  reduce using rule 54 (factor)


State 57

   37 var: ID '[' . expression ']'

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 77
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 58

   56 call: ID '(' . args ')'

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    $default  reduce using rule 58 (args)

    expression           go to state 78
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    args                 go to state 79
    arg_list             go to state 80


State 59

   29 selection_stmt: KEYWORD_IF '(' . expression ')' statement
   30               | KEYWORD_IF '(' . expression ')' statement KEYWORD_ELSE statement

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 81
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 60

   32 return_stmt: KEYWORD_RETURN ';' .

    $default  reduce using rule 32 (return_stmt)


State 61

   33 return_stmt: KEYWORD_RETURN expression . ';'

    ';'  shift, and go to state 82


State 62

   31 iteration_stmt: KEYWORD_WHILE '(' . expression ')' statement

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 83
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 63

   52 factor: '(' expression . ')'

    ')'  shift, and go to state 84


State 64

   27 expression_stmt: expression ';' .

    $default  reduce using rule 27 (expression_stmt)


State 65

   34 expression: var '=' . expression

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 85
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 66

   40 relop: LESS_EQUAL_THAN .

    $default  reduce using rule 40 (relop)


State 67

   41 relop: LESS_THAN .

    $default  reduce using rule 41 (relop)


State 68

   42 relop: GREAT_THAN .

    $default  reduce using rule 42 (relop)


State 69

   43 relop: GREAT_EQUAL_THAN .

    $default  reduce using rule 43 (relop)


State 70

   44 relop: DOUBLE_EQUAL .

    $default  reduce using rule 44 (relop)


State 71

   45 relop: NOT_EQUAL .

    $default  reduce using rule 45 (relop)


State 72

   46 additive_expression: additive_expression '+' . term

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    var     go to state 86
    term    go to state 87
    factor  go to state 55
    call    go to state 56


State 73

   47 additive_expression: additive_expression '-' . term

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    var     go to state 86
    term    go to state 88
    factor  go to state 55
    call    go to state 56


State 74

   38 simple_expression: additive_expression relop . additive_expression

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    var                  go to state 86
    additive_expression  go to state 89
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 75

   49 term: term '*' . factor

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    var     go to state 86
    factor  go to state 90
    call    go to state 56


State 76

   50 term: term '/' . factor

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    var     go to state 86
    factor  go to state 91
    call    go to state 56


State 77

   37 var: ID '[' expression . ']'

    ']'  shift, and go to state 92


State 78

   60 arg_list: expression .

    $default  reduce using rule 60 (arg_list)


State 79

   56 call: ID '(' args . ')'

    ')'  shift, and go to state 93


State 80

   57 args: arg_list .
   59 arg_list: arg_list . ',' expression

    ','  shift, and go to state 94

    $default  reduce using rule 57 (args)


State 81

   29 selection_stmt: KEYWORD_IF '(' expression . ')' statement
   30               | KEYWORD_IF '(' expression . ')' statement KEYWORD_ELSE statement

    ')'  shift, and go to state 95


State 82

   33 return_stmt: KEYWORD_RETURN expression ';' .

    $default  reduce using rule 33 (return_stmt)


State 83

   31 iteration_stmt: KEYWORD_WHILE '(' expression . ')' statement

    ')'  shift, and go to state 96


State 84

   52 factor: '(' expression ')' .

    $default  reduce using rule 52 (factor)


State 85

   34 expression: var '=' expression .

    $default  reduce using rule 34 (expression)


State 86

   53 factor: var .

    $default  reduce using rule 53 (factor)


State 87

   46 additive_expression: additive_expression '+' term .
   49 term: term . '*' factor
   50     | term . '/' factor

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76

    $default  reduce using rule 46 (additive_expression)


State 88

   47 additive_expression: additive_expression '-' term .
   49 term: term . '*' factor
   50     | term . '/' factor

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76

    $default  reduce using rule 47 (additive_expression)


State 89

   38 simple_expression: additive_expression relop additive_expression .
   46 additive_expression: additive_expression . '+' term
   47                    | additive_expression . '-' term

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 38 (simple_expression)


State 90

   49 term: term '*' factor .

    $default  reduce using rule 49 (term)


State 91

   50 term: term '/' factor .

    $default  reduce using rule 50 (term)


State 92

   37 var: ID '[' expression ']' .

    $default  reduce using rule 37 (var)


State 93

   56 call: ID '(' args ')' .

    $default  reduce using rule 56 (call)


State 94

   59 arg_list: arg_list ',' . expression

    ID   shift, and go to state 36
    NUM  shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 97
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 95

   29 selection_stmt: KEYWORD_IF '(' expression ')' . statement
   30               | KEYWORD_IF '(' expression ')' . statement KEYWORD_ELSE statement

    ID              shift, and go to state 36
    NUM             shift, and go to state 37
    KEYWORD_IF      shift, and go to state 38
    KEYWORD_RETURN  shift, and go to state 39
    KEYWORD_WHILE   shift, and go to state 40
    ';'             shift, and go to state 41
    '('             shift, and go to state 42
    '{'             shift, and go to state 27

    compound_stmt        go to state 44
    statement            go to state 98
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 96

   31 iteration_stmt: KEYWORD_WHILE '(' expression ')' . statement

    ID              shift, and go to state 36
    NUM             shift, and go to state 37
    KEYWORD_IF      shift, and go to state 38
    KEYWORD_RETURN  shift, and go to state 39
    KEYWORD_WHILE   shift, and go to state 40
    ';'             shift, and go to state 41
    '('             shift, and go to state 42
    '{'             shift, and go to state 27

    compound_stmt        go to state 44
    statement            go to state 99
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 97

   59 arg_list: arg_list ',' expression .

    $default  reduce using rule 59 (arg_list)


State 98

   29 selection_stmt: KEYWORD_IF '(' expression ')' statement .
   30               | KEYWORD_IF '(' expression ')' statement . KEYWORD_ELSE statement

    KEYWORD_ELSE  shift, and go to state 100

    KEYWORD_ELSE  [reduce using rule 29 (selection_stmt)]
    $default      reduce using rule 29 (selection_stmt)


State 99

   31 iteration_stmt: KEYWORD_WHILE '(' expression ')' statement .

    $default  reduce using rule 31 (iteration_stmt)


State 100

   30 selection_stmt: KEYWORD_IF '(' expression ')' statement KEYWORD_ELSE . statement

    ID              shift, and go to state 36
    NUM             shift, and go to state 37
    KEYWORD_IF      shift, and go to state 38
    KEYWORD_RETURN  shift, and go to state 39
    KEYWORD_WHILE   shift, and go to state 40
    ';'             shift, and go to state 41
    '('             shift, and go to state 42
    '{'             shift, and go to state 27

    compound_stmt        go to state 44
    statement            go to state 101
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56


State 101

   30 selection_stmt: KEYWORD_IF '(' expression ')' statement KEYWORD_ELSE statement .

    $default  reduce using rule 30 (selection_stmt)
